<?php
/**
 * Created by PhpStorm.
 * User: burn
 * Date: 2017/3/29
 * Time: 上午10:38
 *
 * 书籍销售管理
 * ----------------------------------------------------------------------------
 * ============================================================================
 */

namespace Admin\Controller;

use Think\AjaxPage;

class BookSaleController extends BaseController
{
	public function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
		
		if(cookie('permissions') != 1)
		{
			$this->display('Admin/login');
		}
	}
	
	public function bookSaleList()
	{
		$this->display();
	}
	
	public function ajaxBookList()
	{
		if(cookie('permissions') == 1)
		{
			if(cookie('uid'))
			{
				$keyWord = I('key_word');
				
				if(cookie('uid'))
				{
					$condition['author'] = array('like', '%' . $keyWord . '%');
					
					$condition['articlename'] = array('like', '%' . $keyWord . '%');
					
					$condition['_logic'] = 'OR';
					
					$count = M('distribution_obook_obook')->where($condition)->count();
					
					$Page = new AjaxPage($count, 10);
					
					$show = $Page->show();
					
					$orderStr = C('DB_PREFIX') . "distribution_obook_obook.{$_POST['orderby1']} {$_POST['orderby2']}";
					
					$articleList = M('distribution_obook_obook')->where($condition)->limit($Page->firstRow . ',' . $Page->listRows)->order($orderStr)->select();
					
					foreach($articleList as $key => $item)
					{
						$articleList[$key]['wordsum'] = $this->getBookWorSum($item['size']);
					}
					
					$this->assign('articlelist', $articleList);
					
					$this->assign('page', $show);
					
					$this->display();
				}
				else
				{
					$this->display('Admin/Login');
				}
			}
		}
	}
	
	private function getBookWorSum($size)
	{
		return intval($size / 2);
	}
	
	public function chapterList()
	{
		$articleID = I('id');
		
		$article = M('distribution_obook_obook')->where(array('articleid' => $articleID))->field('articlename,articleid')->find();
		
		$this->assign('article',$article);
		
		$this->display();
	}
	
	public function ajaxChapterList()
	{
		if(I('get.id'))
		{
			$articleID = I('get.id');
		}
		else if(I('post.id'))
		{
			$articleID = I('post.id');
		}
		
		if(cookie('uid'))
		{
			$keyWord = I('post.key_word');
			
			$condition1['chaptername'] = array('like', '%' . $keyWord . '%');
			
			$condition2['articleid']   = $articleID;
			
			$condition                 = array($condition1,$condition2);
			
			$condition['_logic']       = 'AND';
			
			$count = M('distribution_obook_ochapter')->where($condition)->count();
			
			$Page = new AjaxPage($count, 10);
			
			$show = $Page->show();
			
			$orderStr = C('DB_PREFIX') . "distribution_obook_ochapter.{$_POST['orderby1']} {$_POST['orderby2']}";
			
			$chapterList = M('distribution_obook_ochapter')->where($condition)->limit($Page->firstRow . ',' . $Page->listRows)->order($orderStr)->select();
			
			foreach($chapterList as $key => $item)
			{
				$chapterList[$key]['wordsum'] = $this->getBookWorSum($item['size']);
			}
			
			$this->assign('chapterlist', $chapterList);
			
			$this->assign('page', $show);
			
			$this->display();
		}
		else
		{
			$this->display('Admin/Login');
		}
	}
	
	public function chapterSaleList()
	{
		$chapterID = I('id');
		
		$chapter   = M('distribution_obook_ochapter')->where(array('chapterid' => $chapterID))->field('chaptername,chapterid')->find();
		
		$this->assign('chapter',$chapter);
		
		$this->display();
	}
	
	public function ajaxChapterSaleList()
	{
		if(I('get.id'))
		{
			$chapterID = I('get.id');
		}
		else if(I('post.id'))
		{
			$chapterID = I('post.id');
		}
		
		if(cookie('uid'))
		{
			$condition['ochapterid'] = $chapterID;
			
			$count           = M('distribution_obook_obuyinfo')->where($condition)->count();
			
			$Page            = new AjaxPage($count, 10);
			
			$show            = $Page->show();
			
			$orderStr        = '`buytime` DESC';
			
			$chapterInfoList = M('distribution_obook_obuyinfo')->where($condition)->limit($Page->firstRow . ',' . $Page->listRows)->order($orderStr)->field('buytime,username,buyprice,buynum,channelid,channeltype')->select();
			
			foreach($chapterInfoList as $key => $item)
			{
				$chapterInfoList[$key]['buytime'] = date('Y-m-d H:i:s',$item['buytime']);
				
				$channelInfo = $this->getChannelInfo($item['channelid']);
				
				$chapterInfoList[$key]['channelname'] = $channelInfo['channelname'];
				
				$chapterInfoList[$key]['channeltype'] = $channelInfo['channeltype'];
			}
			
			$this->assign('chapterlist', $chapterInfoList);
			
			$this->assign('page', $show);
			
			$this->display();
		}
		else
		{
			$this->display('Admin/Login');
		}
	}
	
	private function getChannelInfo($channelID)
	{
		$channelInfo = M('distribution_channels')->where(array('channelid' => $channelID))->find();
		
		if(!$channelInfo)
		{
			$channelInfo['channelname'] = '官方渠道';
			
			$channelInfo['channeltype'] = '暂无统计';
		}
		
		return $channelInfo;
	}
	
	public function bookSaleListByChannelID()
	{
		$this->display();
	}
	
	public function ajaxBookSaleListByChannelID()
	{
		if(cookie('permissions') == 0)
		{
			$keyWord   = cookie('channelname');
			
			$isChannel = 1;
			
			$this->assign('ischannel',$isChannel);
		}
		else
		{
			$keyWord = I('key_word');
		}
		
		if(cookie('uid'))
		{
			$count       = M('distribution_channels')->where(1)->count();
			
			$Page        = new AjaxPage($count,10);
			
			$show        = $Page->show();
			
			$channelList = M('distribution_channels')->where(array('channelname' => array('like','%' . $keyWord . '%')))->limit($Page->firstRow . ',' . $Page->listRows)->select();
			
			$channelList = convert_arr_key($channelList,'channelid');
			
			foreach($channelList as $key => $value)
			{
				$channelList[$key]['salesum']      = $this->getChannelSaleSumByChannelID($value['channelid']);
				
				$channelList[$key]['todaysalesum'] = $this->getChannelTodaySaleSumByChannelID($value['channelid']);
			}
			
			$this->assign('channelList',$channelList);
			
			$this->assign('page',$show);// 赋值分页输出
			
			$this->display();
		}
	}
	
	private function getChannelSaleSumByChannelID($channelID)
	{
		$condition['channelid'] = $channelID;
		
		$buyInfoList = M('distribution_obook_obuyinfo')->where($condition)->select();
		
		$saleSum = 0;
		
		foreach($buyInfoList as $buyInfo)
		{
			$saleSum += $buyInfo['buyprice'];
		}
		
		return $saleSum;
	}
	
	private function getChannelTodaySaleSumByChannelID($channelID)
	{
		$todayTime              = strtotime(date('Y-m-d'));
		
		$condition['buytime']   = array('egt',$todayTime);
		
		$condition['channelid'] = $channelID;
		
		$buyInfoList = M('distribution_obook_obuyinfo')->where($condition)->select();
		
		$saleSum = 0;
		
		foreach($buyInfoList as $buyInfo)
		{
			$saleSum += $buyInfo['buyprice'];
		}
		
		return $saleSum;
	}
	
	public function channelSaleListByChannleID()
	{
		$channelID = I('id');
		
		$channelInfo = M('distribution_channels')->where(array('channelid' => $channelID))->find();
		
		$this->assign('channel',$channelInfo);
		
		$this->display();
	}
	
	public function ajaxChannelSaleListByChannelID()
	{
		if(cookie('uid'))
		{
			$channelID = I('get.id');
			
			$condition['channelid'] = $channelID;
			
			$count = M('distribution_obook_obuyinfo')->where($condition)->count();
			
			$Page = new AjaxPage($count, 10);
			
			$show = $Page->show();
			
			$chapterList = M('distribution_obook_obuyinfo')->where($condition)->limit($Page->firstRow . ',' . $Page->listRows)->select();
			
			foreach($chapterList as $key => $value)
			{
				$chapterList[$key]['buytime'] = date('Y-m-d H:i:s',$value['buytime']);
			}
			
			$this->assign('chapterlist', $chapterList);
			
			$this->assign('page', $show);
			
			$this->display();
		}
		else
		{
			$this->display('Admin/Login');
		}
	}
}