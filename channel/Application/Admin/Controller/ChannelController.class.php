<?php
/**
 * Created by PhpStorm.
 * User: burn
 * Date: 2017/2/13
 * Time: 下午7:41
 *
 * 书盟的渠道类
 *
 */

namespace Admin\Controller;
use Think\Model;
use Think\AjaxPage;

class ChannelController extends BaseController
{
	public function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
		
		if(cookie('uid') == 0 || !isset($_COOKIE['uid']))
		{
			$this->display('Admin/login');
		}
	}
	
	/**
	 * 绑定渠道用户id
	 */
	public function index()
	{
		if(cookie('permissions') == 0)
		{
			$uid = cookie('uid');
			
			$channel = M('distribution_channels')->where("uid = $uid")->field('channelname,channelid')->find();
			
			cookie('channelid',$channel['channelid']);
			
			cookie('channelname',$channel['channelname']);
			
			$this->assign('ischannelname',$channel['channelname']);
			
			$this->assign('channelid',$channel['channelid']);
			
			$this->assign('ischannel',1);
			
			$adminInfo['name'] = cookie('uname');
			
			$this->assign('admin_info',$adminInfo);
			
			$this->display('channelList');
		}
		else
		{
			$url = U('Admin/Admin/Login');
			
			$this->error('获取权限失败，请重新登录！',$url,3);
		}
	}
	
	public function channelList()
	{
		$this->display();
	}
	
	/**
	 * 添加新渠道
	 */
	public function addEditChannel()
	{
		$action    = I('action');
		
		if(cookie('uid') && cookie('permissions') == 1)
		{
			$channelID = trim(I('id'));
			
			$channel   = M('distribution_channels')->where(array('channelid' => $channelID))->find();
			
			$distributionUrl = C('DISTRIBUTION_URL');
			
			$channel['url']  = sprintf($distributionUrl,$channel['secretkey'],urlencode($channel['channelname']),urlencode($channel['channeltype']));
			
			$weiXinDistributionUrl = C('WEIXIN_DISTRIBUTION_URL');
			
			$channel['weixinurl']  = sprintf($weiXinDistributionUrl,$channel['secretkey'],urlencode($channel['channelname']),urlencode($channel['channeltype']));
			
			$this->assign('channel',$channel);
			
			if(($_GET['is_ajax'] == 1) && IS_POST)
			{
				$action = trim(I('action'));
				
				if($action == 'add')
				{
					$channelData['channelname']       = trim(I('post.channel_name'));
					
					$channelData['proportion']        = trim(I('post.channel_proportion'));
					
					$channelData['channeltype']       = trim(I('post.channel_type'));
					
					$channelData['proportion']        = trim(I('post.channel_proportion'));
					
					$channelData['readchaptercount'] = trim(I('post.channel_readchaptercount'));
					
					$channelData['secretkey']   = substr(md5($channelData['channelname'] . time() . $channelData['channeltype']),8,16);
					
					$channelData['posttime']    = time();
 				
					$flag = M('distribution_channels')->add($channelData);
					
					if($flag)
					{
						$payLogData['channelid']   = $flag;
						
						$payLogData['channelname'] = $channelData['channelname'];
						
						$payLogData['paidmoney']   = 0;
						
						$payLogData['remainmoney']  = 0;
						
						M('distribution_pay_log')->add($payLogData);
						
						$return_arr = array
						(
							'status' => '1',
							'msg'    => '添加成功',
							'data'   => array('url' => U('Channel/channelList'))
						);
					}
					else
					{
						$return_arr = array
						(
							'status' => '0',
							'msg'    => '添加失败',
							'data'   => array('url' => U('Channel/channelList'))
						);
					}
				}
				elseif($action == 'edit')
				{
					$channelID = trim(I('post.channel_id'));
					
					$channelData['channelname']      = trim(I('post.channel_name'));
					
					$channelData['channeltype']      = trim(I('post.channel_type'));
					
					$channelData['proportion']       = trim(I('post.channel_proportion'));
					
					$channelData['readchaptercount'] = trim(I('post.channel_readchaptercount'));
					
					$flag = M('distribution_channels')->where(array('channelid' => $channelID))->save($channelData);
					
					if($flag)
					{
						$return_arr = array
						(
							'status' => '1',
							'msg'    => '保存成功',
							'data'   => array('url' => U('Channel/channelList'))
						);
						
						$payLogData['channelname'] = $channelData['channelname'];
						
						M('distribution_pay_log')->where(array('channelid' => $channelID))->save($payLogData);
					}
					else
					{
						$tmpChannelInfo = M('distribution_channels')->where(array('channelid' => $channelID))->find();
						
						if($tmpChannelInfo['channelname'] == $channelData['channelname'] && $tmpChannelInfo['proportion'] == $channelData['proportion'] && $tmpChannelInfo['channeltype'] == $channelData['channeltype'])
						{
							$return_arr = array
							(
								'status' => '1',
								'msg'    => '保存成功',
								'data'   => array('url' => U('Channel/channelList'))
							);
						}
						else
						{
							$return_arr = array
							(
								'status' => '0',
								'msg'    => '保存失败',
								'data'   => array('url' => U('Channel/channelList'))
							);
						}
					}
				}
				
				$this->ajaxReturn(json_encode($return_arr));
			}
			
			$this->assign('action' , $action);
			
			$this->display();
		}
		else
		{
			$this->display('Admin/Login');
		}
	}
	
	/**
	 * 加载渠道列表
	 */
	public function ajaxChannelList()
	{
		if(cookie('permissions') == 0)
		{
			if(cookie('channelname'))
			{
				$keyWord   = cookie('channelname');
				
				$isChannel = 1;
				
				$this->assign('ischannel',$isChannel);
				
				$channelInfo = M('distribution_channels')->where(array('uid' => cookie('uid')))->find();
				
				$condition['channelid'] = $channelInfo['channelid'];
			}
			else
			{
				$channelList = array();
				
				$Page        = new AjaxPage(0,10);
				
				$show        = $Page->show();
				
				$this->assign('channelList',$channelList);
				
				$this->assign('page',$show);// 赋值分页输出
				
				$this->display();
				
				exit();
			}
		}
		else
		{
			$keyWord = I('key_word');
		}
		
		if(cookie('uid'))
		{
			$condition['channelname'] = array('like','%' . $keyWord . '%');
			
			$count       = M('distribution_channels')->where($condition)->count();
			
			$Page        = new AjaxPage($count,10);
			
			$show        = $Page->show();
			
			$channelList = M('distribution_channels')->where($condition)->limit($Page->firstRow . ',' . $Page->listRows)->select();
			
			$channelList = convert_arr_key($channelList,'channelid');
			
			foreach($channelList as $key => $value)
			{
				$channelList[$key] = $this->getChannelPayLog($value['channelid']);
			}
			
			$this->assign('channelList',$channelList);
			
			$this->assign('page',$show);// 赋值分页输出
			
			$this->display();
		}
	}
	
	/**
	 * 结算接口
	 */
    public function settlement()
    {
    	if(cookie('uid') && cookie('permissions') == 1)
	    {
		    $id = I('id');
		
		    $settlement = $this->getChannelPayLog($id);
		    
		    if(($_GET['is_ajax'] == 1) && IS_POST)
		    {
			    $action = trim(I('action'));
			
			    if($action == 'settlement')
			    {
				    $channelID   = I('channelid');
				
				    $channelName = I('channelname');
				
				    $payInfo = M('distribution_pay_log')->where(array('channelid' => $channelID,'channelname' => $channelName))->find();
				
				    $convertProportion = C('CONVERTIBLE_PROPORTION');//兑换比例
				    
				    $money = I('money') / $convertProportion;
				
				    if(!$money)
				    {
					    $return_arr = array
					    (
						    'status' => '1',
						    'msg'    => '结算成功',
						    'data'   => array('url' => U('Channel/channelList'))
					    );
				    }
				    else if($payInfo['remainmoney'] >= $money)
				    {
					    $data['lastpaytime'] = time();
					
					    $data['paidmoney'] = $payInfo['paidmoney'] + $money;
					
					    $data['remainmoney'] = $payInfo['remainmoney'] - $money;
					
					    $flag = M('distribution_pay_log')->where(array('channelid' => $channelID))->save($data);
					
					    if($flag)
					    {
						    $return_arr = array('status' => '1', 'msg' => '结算成功', 'data' => array('url' => U('Channel/channelList')));
					    }
					    else
					    {
						    $return_arr = array('status' => '0', 'msg' => '结算失败', 'data' => array('url' => U('Channel/channelList')));
					    }
				    }
				    else
				    {
					    $return_arr = array
					    (
						    'status' => '0',
						    'msg'    => '结算失败',
						    'data'   => array('url' => U('Channel/channelList'))
					    );
				    }
				
				    $this->ajaxReturn(json_encode($return_arr));
			    }
		    }
		
		    $this->assign('settlement',$settlement);
		
		    $this->display();
	    }
	    else
	    {
		    $this->display('Admin/Login');
	    }
    }
	
	/**
	 * 查看渠道的书籍销售情况
	 */
	public function delChannel()
	{
		if(cookie('uid') && cookie('permissions') == 1)
		{
			$id      = I('id');
			
			$oldData = M('distribution_channels')->where(array('channelid' => $id))->select();
			
			$flag    = M('distribution_channels')->where(array('channelid' => $id))->delete();
			
			if($flag)
			{
				$flag = M('distribution_pay_log')->where(array('channelid' => $id))->delete();
				
				if($flag)
				{
					$return_arr = array
					(
						'status' => '1',
						'msg'    => '删除成功',
						'data'   => array('url' => U('Channel/channelList'))
					);
				}
				else
				{
					$data = M('distribution_pay_log')->where(array('channelid' => $id))->select();
					
					if(!$data)
					{
						$return_arr = array
						(
							'status' => '1',
							'msg'    => '删除成功',
							'data'   => array('url' => U('Channel/channelList'))
						);
					}
					else
					{
						M('distribution_channels')->add($oldData);
						
						$return_arr = array
						(
							'status' => '0',
							'msg'    => '删除失败',
							'data'   => array('url' => U('Channel/channelList'))
						);
					}
				}
			}
			else
			{
				$return_arr = array
				(
					'status' => '0',
					'msg'    => '删除失败',
					'data'   => array('url' => U('Channel/channelList'))
				);
			}
		}
		else
		{
			$this->display('Admin/Login');
		}
		
		$this->ajaxReturn(json_encode($return_arr));
	}
	
	/**
	 * 绑定渠道用户id
	 */
	public function bindUserChannel()
	{
		if(cookie('uid') && cookie('permissions') == 1)
		{
			$channelInfo = I();
			
			$channelInfo = M('distribution_channels')->where(array('channelid' => $channelInfo['id']))->find();
			
			$this->assign('channelinfo',$channelInfo);
			
			$tmpUserList = M('system_users')->where(array('ischannel' => 1))->select();
			
			foreach($tmpUserList as $key => $value)
			{
				$userInfo['uid']  = $value['uid'];
				
				$userInfo['name'] = $value['uname'];
				
				$userList[]       = $userInfo;
			}
			
			if(($_GET['is_ajax'] == 1) && IS_POST)
			{
				$data['uid'] = trim(I('uid'));
				
				if($data['uid'])
				{
					$channelID   = trim(I('channel_id'));
					
					$flag        = M('distribution_channels')->where(array('channelid' => $channelID))->save($data);
					
					if($flag)
					{
						$userData['ischannelbind'] = 1;
						
						$flag = M('system_users')->where(array('uid' => $data['uid']))->save($userData);
						
						if($flag)
						{
							$return_arr = array
							(
								'status' => '1',
								'msg'    => '绑定成功',
								'data'   => array('url' => U('Channel/channelList'))
							);
						}
						else
						{
							$channel = M('distribution_channels')->where(array('channelid' => $channelID))->find();
							
							if($channel['uid'] == $data['uid'])
							{
								$return_arr = array
								(
									'status' => '1',
									'msg'    => '绑定成功',
									'data'   => array('url' => U('Channel/channelList'))
								);
							}
							else
							{
								$data['uid'] = 0;
								
								M('distribution_channels')->where(array('channelid' => $channelID))->save($data);
								
								$return_arr = array
								(
									'status' => '0',
									'msg'    => '绑定失败',
									'data'   => array('url' => U('Channel/channelList'))
								);
							}
						}
					}
					else
					{
						$channel = M('distribution_channels')->where(array('channelid' => $channelID))->find();
						
						if($channel['uid'] == $data['uid'])
						{
							$return_arr = array
							(
								'status' => '1',
								'msg'    => '绑定成功',
								'data'   => array('url' => U('Channel/channelList'))
							);
						}
						else
						{
							$return_arr = array
							(
								'status' => '0',
								'msg'    => '绑定失败',
								'data'   => array('url' => U('Channel/channelList'))
							);
						}
					}
				}
				else
				{
					$return_arr = array
					(
						'status' => '0',
						'msg'    => '请选择用户',
						'data'   => array('url' => U('Channel/bindUserChannel',array('id' => $channelInfo['id'],'channelname' => $channelInfo['channelname'])))
					);
				}
				
				$this->ajaxReturn(json_encode($return_arr));
			}
			
			$this->assign('userlist',$userList);
			
			$this->display();
		}
		else
		{
			$this->display('Admin/Login');
		}
	}

	/**
	 * 根据$channelID获取渠道的结算信息
	 *
	 * @param $channelID
	 * @return mixed
	 */
	private function getChannelPayLog($channelID)
	{
		$channelPayLog = M('distribution_pay_log')->where(array('channelid' => $channelID))->find();
		
		$channelInfo   = M('distribution_channels')->where(array('channelid' => $channelID))->find();
		
		$channelPayInfo['channelid']   = $channelInfo['channelid'];
		
		$channelPayInfo['channelname'] = $channelInfo['channelname'];
		
		$channelPayInfo['summoney']    = ($channelPayLog['paidmoney'] + $channelPayLog['remainmoney']);
		
		$channelPayInfo['remainmoney'] = $channelPayLog['remainmoney'] * $channelInfo['proportion'];
		
		$channelPayInfo['proportion']  = $channelInfo['proportion'];
		
		$channelPayInfo['paidmoney']   = $channelPayLog['paidmoney'] ? $channelPayLog['paidmoney']  : 0;
		
		return $channelPayInfo;
	}

	public function showChannelInfo()
	{
		$channelID = I('id');
		
		$channel   = M('distribution_channels')->where(array('channelid' => $channelID))->find();
		
		$distributionUrl = C('DISTRIBUTION_URL');
		
		$channel['url']  = sprintf($distributionUrl,$channel['secretkey'],urlencode($channel['channelname']),urlencode($channel['channeltype']));
		
		$weiXinDistributionUrl = C('WEIXIN_DISTRIBUTION_URL');
		
		$channel['weixinurl']  = sprintf($weiXinDistributionUrl,$channel['secretkey'],urlencode($channel['channelname']),urlencode($channel['channeltype']));
		
		$this->assign('channel',$channel);
		
		$this->display();
	}

	public function getChannelInfo()
	{
		$channelID = I('id');
	
		if(cookie('permissions') == 0)
		{
			$this->assign('ischannel',1);
			
			$channelInfo = M('distribution_channels')->where(array('channelid' => $channelID))->find();
			
			$this->assign('channel',$channelInfo);
			
			$this->display();
		}
		else
		{
			$channelInfo = M('distribution_channels')->where(array('channelid' => $channelID))->find();
			
			$this->assign('channel',$channelInfo);
			
			$this->display();
		}
	}
}
